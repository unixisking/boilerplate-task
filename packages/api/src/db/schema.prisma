generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../../../../node_modules/@generated"
  emitOnly = "inputs,enums,crudResolvers"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique
  /// @TypeGraphQL.omit(output: true)
  password  String
  firstName String
  lastName  String
  avatar    String?
  role      Role     @default(USER)
  bio       String?
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  Todo      Todo[]
}

model Todo {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  completed Boolean? @default(false)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)
}

model Starwars {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String
}
